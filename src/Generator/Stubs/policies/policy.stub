<?php

namespace App\Containers\{{section-name}}\{{container-name}}\Policies;

use Laraneat\Core\Abstracts\Policies\Policy;
use Illuminate\Auth\Access\HandlesAuthorization;
use App\Containers\{{section-name}}\{{container-name}}\Models\{{model}};
use {{namespaced-user-model}};

class {{class-name}} extends Policy
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     *
     * @param  \{{namespaced-user-model}}  ${{user-entity}}
     * @return mixed
     */
    public function viewAny({{user-model}} ${{user-entity}})
    {
        return $user->can('view-{{kebab-entities}}');
    }

    /**
     * Determine whether the user can view the model.
     *
     * @param  \{{namespaced-user-model}}  ${{user-entity}}
     * @param  \App\Containers\{{section-name}}\{{container-name}}\Models\{{model}}  ${{entity}}
     * @return mixed
     */
    public function view({{user-model}} ${{user-entity}}, {{model}} ${{entity}})
    {
        return $user->can('view-{{kebab-entities}}');
    }

    /**
     * Determine whether the user can create models.
     *
     * @param  \{{namespaced-user-model}}  ${{user-entity}}
     * @return mixed
     */
    public function create({{user-model}} ${{user-entity}})
    {
        return $user->can('create-{{kebab-entities}}');
    }

    /**
     * Determine whether the user can update the model.
     *
     * @param  \{{namespaced-user-model}}  ${{user-entity}}
     * @param  \App\Containers\{{section-name}}\{{container-name}}\Models\{{model}}  ${{entity}}
     * @return mixed
     */
    public function update({{user-model}} ${{user-entity}}, {{model}} ${{entity}})
    {
        return $user->can('update-{{kebab-entities}}');
    }

    /**
     * Determine whether the user can delete the model.
     *
     * @param  \{{namespaced-user-model}}  ${{user-entity}}
     * @param  \App\Containers\{{section-name}}\{{container-name}}\Models\{{model}}  ${{entity}}
     * @return mixed
     */
    public function delete({{user-model}} ${{user-entity}}, {{model}} ${{entity}})
    {
        return $user->can('delete-{{kebab-entities}}');
    }

    /**
     * Determine whether the user can restore the model.
     *
     * @param  \{{namespaced-user-model}}  ${{user-entity}}
     * @param  \App\Containers\{{section-name}}\{{container-name}}\Models\{{model}}  ${{entity}}
     * @return mixed
     */
    public function restore({{user-model}} ${{user-entity}}, {{model}} ${{entity}})
    {
        return $user->can('delete-{{kebab-entities}}');
    }

    /**
     * Determine whether the user can permanently delete the model.
     *
     * @param  \{{namespaced-user-model}}  ${{user-entity}}
     * @param  \App\Containers\{{section-name}}\{{container-name}}\Models\{{model}}  ${{entity}}
     * @return mixed
     */
    public function forceDelete({{user-model}} ${{user-entity}}, {{model}} ${{entity}})
    {
        return $user->can('force-delete-{{kebab-entities}}');
    }
}
