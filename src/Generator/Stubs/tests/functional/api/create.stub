<?php

namespace App\Containers\{{section-name}}\{{container-name}}\UI\API\Tests\Functional;

use App\Containers\{{section-name}}\{{container-name}}\Models\{{model}};
use App\Containers\{{section-name}}\{{container-name}}\Tests\ApiTestCase;

/**
 * Class {{class-name}}.
 *
 * @group {{_container-name}}
 * @group api
 */
class {{class-name}} extends ApiTestCase
{
    protected string $url = '{{url}}';

    /**
     * Roles and permissions, to be attached on the user by default
     */
    protected array $access = [
        'permissions' => 'create-{{kebab-entities}}',
        'roles'       => '',
    ];

    protected function getTestData(): array
    {
        return [
           // 'key' => 'value'
        ];
    }

    public function testCreate{{model}}(): void
    {
        $this->getTestingUser();
        $data = $this->getTestData();

        $this->postJson($this->buildApiUrl(), $data)
            ->assertCreated()
            ->assertJson(fn (AssertableJson $json) =>
                $json->has('_profiler')
                    ->has('data', fn (AssertableJson $json) =>
                        $json->has('id')
                            ->whereAll($data)
                            ->etc()
                        )
            );

        $this->assertExistsModelWithAttributes({{model}}::class, $data);
    }

    public function testCreate{{model}}WithoutAccess(): void
    {
        $this->getTestingUserWithoutAccess();
        $data = $this->getTestData();

        $this->postJson($this->buildApiUrl(), $data)
            ->assertStatus(403);
    }
}
